@using System.Reflection
@using Auth
@using authica.Translations

<nav class="navbar navbar-expand-md navbar-dark bg-primary">
    <div class="container-xxl">
        <a class="navbar-brand me-0" href="@C.Routes.Root">@_t.App<sup class="text-muted">@Version</sup></a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
            aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse d-md-flex justify-content-between" id="navbarNavDropdown">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="@C.Routes.MyProfile"><i class="me-2 bi bi-person-badge"></i>
                        @_t.MyProfile</a>
                </li>
                @if (Session.HasClaim(Claims.IsAdmin))
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@C.Routes.Roles"><i class="me-2 bi bi-person-rolodex"></i> @_t.Roles</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@C.Routes.Users"><i class="me-2 bi bi-people"></i> @_t.Users</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@C.Routes.Apps"><i class="me-2 bi bi-window-stack"></i> @_t.Apps</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@C.Routes.Configuration"><i class="me-2 bi bi-sliders"></i>
                            @_t.Configuration</a>
                    </li>
                }
            </ul>
            <div class="dropdown text-end navbar-nav">
                <a href="#" class="nav-link d-block text-decoration-none dropdown-toggle" id="user-dropdown"
                    data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="me-2 bi bi-person-circle"></i> @DisplayName
                </a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="user-dropdown">
                    @if (Session.HasClaim(Claims.IsAdmin))
                    {
                        <li>
                            <button class="dropdown-item" @onclick=Restart>
                                <i class="me-2 text-warning bi bi-arrow-clockwise"></i> @_t.Restart
                            </button>
                        </li>
                        <li>
                        <button class="dropdown-item" @onclick=Shutdown>
                            <i class="me-2 text-danger bi bi-power"></i> @_t.Shutdown
                        </button>
                    </li>
                        <li>
                        <hr class="dropdown-divider">
                    </li>
                    }
                    <li>
                        <a class="dropdown-item" href="@C.Routes.SignOut">
                            <i class="me-2 bi bi-box-arrow-right"></i> @_t.SignOut
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</nav>

@code {
    [Inject] public CurrentSession Session { get; set; } = null!;
    [Inject] public NavigationManager Nav { get; set; } = null!;
    private string? Version;
    private string? DisplayName;
    private INavigation _t = LocalizationFactory.Navigation();
    protected override void OnInitialized()
    {
        Version =
        Assembly.GetExecutingAssembly().GetCustomAttribute<AssemblyInformationalVersionAttribute>()?.InformationalVersion;
        DisplayName = Session.GetClaimValue(Claims.DisplayName) ?? Session.GetClaimValue(Claims.UserName);
        _t = LocalizationFactory.Navigation(Session.LocaleId);
    }
    void Restart()
    {
        Nav.NavigateTo(C.Routes.Restart, true);
        Program.Shutdown(true);
    }
    void Shutdown()
    {
        Nav.NavigateTo(C.Routes.Shutdown, true);
        Program.Shutdown();
    }
}